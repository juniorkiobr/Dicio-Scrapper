"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const cheerio_1 = __importDefault(require("cheerio"));
const open_graph_scraper_1 = __importDefault(require("open-graph-scraper"));
function parse(content, { parser = cheerio_1.default }) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!content) {
            throw new Error("Failed to retrieve page content");
        }
        const $ = parser.load(content);
        /**
         * Scrape OpenGraph data from page html
         */
        const { result: openGraph } = yield (0, open_graph_scraper_1.default)({
            url: "",
            html: content,
        });
        /**
         * Scrape LinkedData from html if present.
         */
        const linkedDataElement = $('script[type="application/ld+json"]');
        let linkedData = null;
        try {
            linkedData = JSON.parse(linkedDataElement.html());
        }
        catch (err) {
            console.warn("Failed to retrieve linked data", err);
        }
        return {
            openGraph,
            linkedData,
            document: $,
        };
    });
}
exports.parse = parse;
